{"version":3,"file":"custom-interactions.js","mappings":"6PAYA,MAAMA,UAAaC,EAAAA,EACjBC,cACEC,MAAM,CACJC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,gBAAiBA,EACjBC,cAAeA,IAOjBC,KAAKC,YAAc,KAMnBD,KAAKE,QAAU,UAMfF,KAAKG,SAAW,KAMhBH,KAAKI,qBAAkBC,GAQ3B,SAAST,EAAgBU,GACvB,MAEMC,EAFMD,EAAIE,IAEIC,sBAAsBH,EAAII,OAAO,SAAUH,GAC7D,OAAOA,KAQT,OALIA,IACFP,KAAKC,YAAcK,EAAIK,WACvBX,KAAKG,SAAWI,KAGTA,EAMX,SAASV,EAAgBS,GACvB,MAAMM,EAASN,EAAIK,WAAW,GAAKX,KAAKC,YAAY,GAC9CY,EAASP,EAAIK,WAAW,GAAKX,KAAKC,YAAY,GAEnCD,KAAKG,SAASW,cACtBC,UAAUH,EAAQC,GAE3Bb,KAAKC,YAAY,GAAKK,EAAIK,WAAW,GACrCX,KAAKC,YAAY,GAAKK,EAAIK,WAAW,GAMvC,SAASb,EAAgBQ,GACvB,GAAIN,KAAKE,QAAS,CAChB,MACMK,EADMD,EAAIE,IACIC,sBAAsBH,EAAII,OAAO,SAAUH,GAC7D,OAAOA,KAEHS,EAAUV,EAAIE,IAAIS,mBACpBV,EACES,EAAQE,MAAMC,QAAUnB,KAAKE,UAC/BF,KAAKI,gBAAkBY,EAAQE,MAAMC,OACrCH,EAAQE,MAAMC,OAASnB,KAAKE,cAEIG,IAAzBL,KAAKI,kBACdY,EAAQE,MAAMC,OAASnB,KAAKI,gBAC5BJ,KAAKI,qBAAkBC,IAQ7B,SAASN,IAGP,OAFAC,KAAKC,YAAc,KACnBD,KAAKG,SAAW,MACT,EAGT,MAAMiB,EAAe,IAAIC,EAAAA,EAAQ,IAAIC,EAAAA,EAAM,CAAC,EAAG,KAEzCC,EAAc,IAAIF,EAAAA,EACtB,IAAIG,EAAAA,EAAW,CACb,EAAE,IAAK,KACP,EAAE,IAAK,QAILC,EAAiB,IAAIJ,EAAAA,EACzB,IAAIK,EAAAA,GAAQ,CACV,CACE,EAAE,KAAM,KACR,EAAE,IAAK,KACP,EAAE,IAAK,KACP,EAAE,KAAM,KACR,EAAE,KAAM,SAQF,IAAIC,EAAAA,EAAI,CAClBC,cAAcC,EAAAA,EAAAA,MAAsBC,OAAO,CAAC,IAAItC,IAChDuC,OAAQ,CACN,IAAIC,EAAAA,EAAU,CACZC,OAAQ,IAAIC,EAAAA,EAAS,CACnBC,IACE,uKAIN,IAAIC,EAAAA,EAAY,CACdH,OAAQ,IAAII,EAAAA,EAAa,CACvBC,SAAU,CAAClB,EAAcG,EAAaE,KAExCP,MAAO,IAAIqB,EAAAA,GAAM,CACfC,MAAO,IAAIC,EAAAA,EAAK,CACdC,OAAQ,CAAC,GAAK,IACdC,aAAc,WACdC,aAAc,SACdC,QAAS,IACTC,IAAK,kBAEPC,OAAQ,IAAIC,EAAAA,EAAO,CACjBC,MAAO,EACPC,MAAO,CAAC,IAAK,EAAG,EAAG,KAErBC,KAAM,IAAIC,EAAAA,EAAK,CACbF,MAAO,CAAC,EAAG,EAAG,IAAK,WAK3BG,OAAQ,MACRC,KAAM,IAAIC,EAAAA,GAAK,CACbC,OAAQ,CAAC,EAAG,GACZC,KAAM,Q","sources":["webpack:///./custom-interactions.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport View from '../src/ol/View.js';\nimport {Fill, Icon, Stroke, Style} from '../src/ol/style.js';\nimport {LineString, Point, Polygon} from '../src/ol/geom.js';\nimport {\n  Pointer as PointerInteraction,\n  defaults as defaultInteractions,\n} from '../src/ol/interaction.js';\nimport {TileJSON, Vector as VectorSource} from '../src/ol/source.js';\nimport {Tile as TileLayer, Vector as VectorLayer} from '../src/ol/layer.js';\n\nclass Drag extends PointerInteraction {\n  constructor() {\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleMoveEvent: handleMoveEvent,\n      handleUpEvent: handleUpEvent,\n    });\n\n    /**\n     * @type {import(\"../src/ol/coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.cursor_ = 'pointer';\n\n    /**\n     * @type {Feature}\n     * @private\n     */\n    this.feature_ = null;\n\n    /**\n     * @type {string|undefined}\n     * @private\n     */\n    this.previousCursor_ = undefined;\n  }\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n * @return {boolean} `true` to start the drag sequence.\n */\nfunction handleDownEvent(evt) {\n  const map = evt.map;\n\n  const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    return feature;\n  });\n\n  if (feature) {\n    this.coordinate_ = evt.coordinate;\n    this.feature_ = feature;\n  }\n\n  return !!feature;\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Map browser event.\n */\nfunction handleDragEvent(evt) {\n  const deltaX = evt.coordinate[0] - this.coordinate_[0];\n  const deltaY = evt.coordinate[1] - this.coordinate_[1];\n\n  const geometry = this.feature_.getGeometry();\n  geometry.translate(deltaX, deltaY);\n\n  this.coordinate_[0] = evt.coordinate[0];\n  this.coordinate_[1] = evt.coordinate[1];\n}\n\n/**\n * @param {import(\"../src/ol/MapBrowserEvent.js\").default} evt Event.\n */\nfunction handleMoveEvent(evt) {\n  if (this.cursor_) {\n    const map = evt.map;\n    const feature = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n      return feature;\n    });\n    const element = evt.map.getTargetElement();\n    if (feature) {\n      if (element.style.cursor != this.cursor_) {\n        this.previousCursor_ = element.style.cursor;\n        element.style.cursor = this.cursor_;\n      }\n    } else if (this.previousCursor_ !== undefined) {\n      element.style.cursor = this.previousCursor_;\n      this.previousCursor_ = undefined;\n    }\n  }\n}\n\n/**\n * @return {boolean} `false` to stop the drag sequence.\n */\nfunction handleUpEvent() {\n  this.coordinate_ = null;\n  this.feature_ = null;\n  return false;\n}\n\nconst pointFeature = new Feature(new Point([0, 0]));\n\nconst lineFeature = new Feature(\n  new LineString([\n    [-1e7, 1e6],\n    [-1e6, 3e6],\n  ])\n);\n\nconst polygonFeature = new Feature(\n  new Polygon([\n    [\n      [-3e6, -1e6],\n      [-3e6, 1e6],\n      [-1e6, 1e6],\n      [-1e6, -1e6],\n      [-3e6, -1e6],\n    ],\n  ])\n);\n\nconst key =\n  'pk.eyJ1IjoiYWhvY2V2YXIiLCJhIjoiY2t0cGdwMHVnMGdlbzMxbDhwazBic2xrNSJ9.WbcTL9uj8JPAsnT9mgb7oQ';\n\nconst map = new Map({\n  interactions: defaultInteractions().extend([new Drag()]),\n  layers: [\n    new TileLayer({\n      source: new TileJSON({\n        url:\n          'https://a.tiles.mapbox.com/v4/aj.1x1-degrees.json?secure&access_token=' +\n          key,\n      }),\n    }),\n    new VectorLayer({\n      source: new VectorSource({\n        features: [pointFeature, lineFeature, polygonFeature],\n      }),\n      style: new Style({\n        image: new Icon({\n          anchor: [0.5, 46],\n          anchorXUnits: 'fraction',\n          anchorYUnits: 'pixels',\n          opacity: 0.95,\n          src: 'data/icon.png',\n        }),\n        stroke: new Stroke({\n          width: 3,\n          color: [255, 0, 0, 1],\n        }),\n        fill: new Fill({\n          color: [0, 0, 255, 0.6],\n        }),\n      }),\n    }),\n  ],\n  target: 'map',\n  view: new View({\n    center: [0, 0],\n    zoom: 2,\n  }),\n});\n"],"names":["Drag","PointerInteraction","constructor","super","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","this","coordinate_","cursor_","feature_","previousCursor_","undefined","evt","feature","map","forEachFeatureAtPixel","pixel","coordinate","deltaX","deltaY","getGeometry","translate","element","getTargetElement","style","cursor","pointFeature","Feature","Point","lineFeature","LineString","polygonFeature","Polygon","Map","interactions","defaultInteractions","extend","layers","TileLayer","source","TileJSON","url","VectorLayer","VectorSource","features","Style","image","Icon","anchor","anchorXUnits","anchorYUnits","opacity","src","stroke","Stroke","width","color","fill","Fill","target","view","View","center","zoom"],"sourceRoot":""}