"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[29],{9472:function(e,t,n){var o=n(1118),r=n(1376),c=n(1372),s=n(5783),i=n(4354),a=n(2110),l=n(7005),u=n(9039),g=n(7975),f=n(720),w=n(6104);const d=new s.Z({url:"https://openlayers.org/data/vector/ecoregions.json",format:new o.Z}),Z=new u.ZP({fill:new g.Z({color:"#eeeeee"})}),m=new r.Z({layers:[new c.Z({source:d,background:"#1a2b39",style:function(e){const t=e.get("COLOR_BIO")||"#eeeeee";return Z.getFill().setColor(t),Z}})],target:"map",view:new i.ZP({center:[0,0],zoom:2,constrainRotation:16})}),y=new u.ZP({fill:new g.Z({color:"rgba(255, 255, 255, 0.6)"}),stroke:new f.Z({color:"rgba(255, 255, 255, 0.7)",width:2})}),h=new a.Z({style:function(e){const t=e.get("COLOR_BIO")||"#eeeeee";return y.getFill().setColor(t),y}});m.addInteraction(h);const E=h.getFeatures(),b=new l.Z({condition:w.QC});m.addInteraction(b),b.on("boxend",(function(){const e=b.getGeometry().getExtent(),t=d.getFeaturesInExtent(e).filter((t=>t.getGeometry().intersectsExtent(e))),n=m.getView().getRotation();if(n%(Math.PI/2)!=0){const e=[0,0],o=b.getGeometry().clone();o.rotate(-n,e);const r=o.getExtent();t.forEach((function(t){const o=t.getGeometry().clone();o.rotate(-n,e),o.intersectsExtent(r)&&E.push(t)}))}else E.extend(t)})),b.on("boxstart",(function(){E.clear()}));const p=document.getElementById("info");E.on(["add","remove"],(function(){const e=E.getArray().map((function(e){return e.get("ECO_NAME")}));e.length>0?p.innerHTML=e.join(", "):p.innerHTML="None"}))}},function(e){var t=function(t){return e(e.s=t)};t(9877),t(9472)}]);
//# sourceMappingURL=box-selection.js.map