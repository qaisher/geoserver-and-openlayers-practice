{"version":3,"file":"icon-sprite-webgl.js","mappings":"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","sources":["webpack:///./icon-sprite-webgl.js"],"sourcesContent":["import Feature from '../src/ol/Feature.js';\nimport Map from '../src/ol/Map.js';\nimport Point from '../src/ol/geom/Point.js';\nimport TileLayer from '../src/ol/layer/WebGLTile.js';\nimport VectorSource from '../src/ol/source/Vector.js';\nimport View from '../src/ol/View.js';\nimport WebGLPointsLayer from '../src/ol/layer/WebGLPoints.js';\nimport XYZ from '../src/ol/source/XYZ.js';\nimport {fromLonLat} from '../src/ol/proj.js';\n\nconst key = 'get_your_own_D6rA4zTHduk6KOKTXzGB';\nconst attributions =\n  '<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\nconst map = new Map({\n  layers: [\n    new TileLayer({\n      source: new XYZ({\n        attributions: attributions,\n        url:\n          'https://api.maptiler.com/tiles/satellite/{z}/{x}/{y}.jpg?key=' + key,\n        tileSize: 512,\n      }),\n    }),\n  ],\n  target: document.getElementById('map'),\n  view: new View({\n    center: [0, 4000000],\n    zoom: 2,\n  }),\n});\n\nconst oldColor = [255, 160, 110];\nconst newColor = [180, 255, 200];\nconst size = 16;\n\nconst style = {\n  variables: {\n    filterShape: 'all',\n  },\n  filter: [\n    'any',\n    ['==', ['var', 'filterShape'], 'all'],\n    ['==', ['var', 'filterShape'], ['get', 'shape']],\n  ],\n  symbol: {\n    symbolType: 'image',\n    src: 'data/ufo_shapes.png',\n    size: size,\n    color: [\n      'interpolate',\n      ['linear'],\n      ['get', 'year'],\n      1950,\n      oldColor,\n      2013,\n      newColor,\n    ],\n    rotateWithView: false,\n    offset: [0, 0],\n    textureCoord: [\n      'match',\n      ['get', 'shape'],\n      'light',\n      [0, 0, 0.25, 0.5],\n      'sphere',\n      [0.25, 0, 0.5, 0.5],\n      'circle',\n      [0.25, 0, 0.5, 0.5],\n      'disc',\n      [0.5, 0, 0.75, 0.5],\n      'oval',\n      [0.5, 0, 0.75, 0.5],\n      'triangle',\n      [0.75, 0, 1, 0.5],\n      'fireball',\n      [0, 0.5, 0.25, 1],\n      [0.75, 0.5, 1, 1],\n    ],\n  },\n};\n\nconst shapeSelect = document.getElementById('shape-filter');\nshapeSelect.addEventListener('input', function () {\n  style.variables.filterShape = shapeSelect.value;\n  map.render();\n});\nfunction fillShapeSelect(shapeTypes) {\n  Object.keys(shapeTypes)\n    .sort(function (a, b) {\n      return shapeTypes[b] - shapeTypes[a];\n    })\n    .forEach(function (shape) {\n      const option = document.createElement('option');\n      const sightings = shapeTypes[shape];\n      option.text = `${shape} (${sightings} sighting${\n        sightings === 1 ? '' : 's'\n      })`;\n      option.value = shape;\n      shapeSelect.appendChild(option);\n    });\n}\n\nconst client = new XMLHttpRequest();\nclient.open('GET', 'data/csv/ufo_sighting_data.csv');\nclient.addEventListener('load', function () {\n  const csv = client.responseText;\n  // key is shape name, value is sightings count\n  const shapeTypes = {};\n  const features = [];\n\n  let prevIndex = csv.indexOf('\\n') + 1; // scan past the header line\n  let curIndex;\n  while ((curIndex = csv.indexOf('\\n', prevIndex)) !== -1) {\n    const line = csv.substring(prevIndex, curIndex).split(',');\n    prevIndex = curIndex + 1;\n\n    const coords = [parseFloat(line[5]), parseFloat(line[4])];\n    const shape = line[2];\n    shapeTypes[shape] = (shapeTypes[shape] || 0) + 1;\n\n    features.push(\n      new Feature({\n        datetime: line[0],\n        year: parseInt(/[0-9]{4}/.exec(line[0])[0], 10), // extract the year as int\n        shape: shape,\n        duration: line[3],\n        geometry: new Point(fromLonLat(coords)),\n      })\n    );\n  }\n  shapeTypes['all'] = features.length;\n  map.addLayer(\n    new WebGLPointsLayer({\n      source: new VectorSource({\n        features: features,\n        attributions: 'National UFO Reporting Center',\n      }),\n      style: style,\n    })\n  );\n  fillShapeSelect(shapeTypes);\n});\nclient.send();\n\nconst info = document.getElementById('info');\nmap.on('pointermove', function (evt) {\n  if (map.getView().getInteracting() || map.getView().getAnimating()) {\n    return;\n  }\n  const text = map.forEachFeatureAtPixel(evt.pixel, function (feature) {\n    const datetime = feature.get('datetime');\n    const duration = feature.get('duration');\n    const shape = feature.get('shape');\n    return `On ${datetime}, lasted ${duration} seconds and had a \"${shape}\" shape.`;\n  });\n  info.innerText = text || '';\n});\n"],"names":["map","Map","layers","TileLayer","source","XYZ","attributions","url","tileSize","target","document","getElementById","view","View","center","zoom","style","variables","filterShape","filter","symbol","symbolType","src","size","color","rotateWithView","offset","textureCoord","shapeSelect","addEventListener","value","render","client","XMLHttpRequest","open","csv","responseText","shapeTypes","features","curIndex","prevIndex","indexOf","line","substring","split","coords","parseFloat","shape","push","Feature","datetime","year","parseInt","exec","duration","geometry","Point","fromLonLat","length","addLayer","WebGLPointsLayer","VectorSource","Object","keys","sort","a","b","forEach","option","createElement","sightings","text","appendChild","fillShapeSelect","send","info","on","evt","getView","getInteracting","getAnimating","forEachFeatureAtPixel","pixel","feature","get","innerText"],"sourceRoot":""}